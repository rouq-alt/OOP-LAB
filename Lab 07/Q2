
#include <iostream>
#include <string>
using namespace std;

// Base Class: Product
class Product {
protected:
    int productID;
    string productName;
    double price;
    int stockQuantity;

public:
    Product(int id, string name, double p, int stock = 0)
        : productID(id), productName(name), price(p), stockQuantity(stock) {}

    virtual void applyDiscount(double percentage) {
        price -= price * (percentage / 100);
    }

    virtual double calculateTotalPrice(int quantity) {
        return price * quantity;
    }

    virtual void displayProductInfo() const {
        cout << "Product: " << productName << " (ID: " << productID << ")\n"
             << "Price: $" << price << "\nStock: " << stockQuantity << " units\n";
    }

    // Operator overloading
    double operator+(const Product &other) const {
        return this->price + other.price;
    }

}; 
    ostream& operator<<(ostream& out,const Product &p){
        p.displayProductInfo();
        return out;
    }


class Electronics : public Product {
private:
    int warrantyPeriod; 
    string brand;

public:
    Electronics(int id, string name, double p, int stock, int warranty, string b)
        : Product(id, name, p, stock), warrantyPeriod(warranty), brand(b) {}

    void displayProductInfo() const override {
        Product::displayProductInfo();
        cout << "Brand: " << brand << "\nWarranty: " << warrantyPeriod << " months\n";
    }
};


class Clothing : public Product {
private:
    string size;
    string color;
    string fabricMaterial;

public:
    Clothing(int id, string name, double p, int stock, string s, string c, string fabric)
        : Product(id, name, p, stock), size(s), color(c), fabricMaterial(fabric) {}

    void applyDiscount(double percentage) override {
        
        Product::applyDiscount(percentage);
    }

    void displayProductInfo() const override {
        Product::displayProductInfo();
        cout << "Size: " << size << "\nColor: " << color << "\nFabric: " << fabricMaterial << endl;
    }
};


class FoodItem : public Product {
private:
    string expirationDate;
    int calories;

public:
    FoodItem(int id, string name, double p, int stock, string expDate, int cal)
        : Product(id, name, p, stock), expirationDate(expDate), calories(cal) {}

    double calculateTotalPrice(int quantity) override {
        double total = Product::calculateTotalPrice(quantity);
        if (quantity > 10) { // Bulk discount
            total *= 0.9; // 10% off
        }
        return total;
    }

    void displayProductInfo() const override {
        Product::displayProductInfo();
        cout << "Expiration Date: " << expirationDate << "\nCalories: " << calories << " kcal\n";
    }
};


class Book : public Product {
private:
    string author;
    string genre;

public:
    Book(int id, string name, double p, int stock, string auth, string gen)
        : Product(id, name, p, stock), author(auth), genre(gen) {}

    void displayProductInfo() const override {
        Product::displayProductInfo();
        cout << "Author: " << author << "\nGenre: " << genre << endl;
    }
};


int main() {
    Electronics laptop(1, "Gaming Laptop", 1200.00, 10, 24, "ASUS");
    Clothing tshirt(2, "Cotton T-Shirt", 25.00, 50, "L", "Blue", "Cotton");
    FoodItem apples(3, "Fresh Apples", 3.50, 100, "2025-05-01", 52);
    Book novel(4, "The Great Gatsby", 15.99, 20, "F. Scott Fitzgerald", "Classic");

    cout << "\nProduct Information:\n";
    laptop.displayProductInfo();
    cout << endl;
    tshirt.displayProductInfo();
    cout << endl;
    apples.displayProductInfo();
    cout << endl;
    novel.displayProductInfo();
    cout << endl;

    cout << "\nApplying Discounts:\n";
    tshirt.applyDiscount(10);
    tshirt.displayProductInfo();
    cout << endl;

    cout << "\nBulk Purchase Calculation:\n";
    cout << "Total price for 12 apples: $" << apples.calculateTotalPrice(12) << endl;

    cout << "\nAdding Prices (operator+):\n";
    cout << "Laptop + T-Shirt price: $" << (laptop + tshirt) << endl;

    return 0;
}
